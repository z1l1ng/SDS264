---
title: "First Shiny instructions"
format:
  html: default
editor_options: 
  chunk_output_type: console
---

### Part 1:

Instructions for Creating Shiny App in Rmarkdown

a) Click "File" > "New File" > "R Markdown" (Note: Quarto has just recently implemented some of its capabilities for interactive apps, including dashboards, so in 264 we will use Rmarkdown files for stability and also for consistency with past projects that you might want to learn from.)

b) On Left side, select "Shiny." You may want to update the Title, but leave the other options as they are. Click "OK".

c) Delete the "Embedded Application" section at the end.

d) Save the resulting file as "first_Shiny.Rmd".

e) Carefully examine the code, including the use of "echo = FALSE" to prevent R code from appearing in the Shiny app.

f) Hit "Run Document" to see the app.  Now you are running a Shiny app through Rmarkdown!


### Group exercise I:

1. Create a second interactive histogram which recreates the 1st histogram (old faithful eruption) as closely as possible using ggplot.

- Hint 1: write ggplot code that works, and then "shiny-ize" it

- Hint 2: Use `aes(y = after_stat(density))` in the histogram to make histogram and density use same y-axis.  

- Hint 3: Give your input variables different names than in the first histogram.

2. Modify the input panel choices for number of bins and bandwidth.
Also change the default/starting input for both bins and bandwidth.

-------------------------------------------------------------------------

### Part 2:

See how a few more input features can be used in `AER_Shiny.Rmd`, which uses the medical expenditure data set `NMES1988`

a) Save this file, then hit "Run Document" to see a few new features (note that you can't simply run individual R chunks in an Rmd meant to produce a Shiny app)

b) Note how a Yes/No check box can be integrated with `if` and `else if`

c) Note how user-input variables for ggplot attributes can be integrated with `.data[[.]]`.  In some of the sample code from past projects, you may see `aes_string()` used instead of `.data[[.]]`.  `aes_string()` still works, but it was recently deprecated so it will no longer be supported in the tidyverse.


### Group exercise II:

3. Create a new shiny app! Use a dataset from class that's built into R (e.g., flights, diamonds, ames, NMES1988,...) and create an interactive graph.  (Hint: you can see all of the built-in R data sets available to you from the packages currently loaded by running `data()`)

4. You might try having multiple inputs, or examining the Shiny CheatSheet Input Options (https://www.rstudio.com/resources/cheatsheets/) and using an input we haven't discussed yet.

---------------------------------------------------------------


### Links to other Rmd files we will use to produce interactive apps

Remember to hit the Download Raw File button in each case.

- [14a_AER_Shiny.Rmd](https://github.com/proback/264_fall_2024/blob/main/more_shiny/14a_AER_Shiny.Rmd)

- [14b_first_Shiny_flexdash.Rmd](https://github.com/proback/264_fall_2024/blob/main/more_shiny/14b_first_Shiny_flexdash.Rmd)


We will also use these folders as well.  You can copy the URL for the folder into the textbox at [download-directory.github.io](download-directory.github.io), hit Enter, and you'll have a zipped version of the folder.

- [AER_app](https://github.com/proback/264_fall_2024/blob/main/AERapp)

- [Ames example](https://github.com/proback/264_fall_2024/blob/main/Ames_example)


Check out my Shiny app on Ames Housing:

- [Click here](https://proback.shinyapps.io/ProfR_Shiny_flexdashboard/)

